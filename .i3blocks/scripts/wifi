#!/bin/bash

#------------------------------------------------------------------------

# if no interface is found, use the first device with a global scope
INTERFACE="${BLOCK_INSTANCE:-wlan0}"
IPADDR=$(ip addr show $IF | perl -n -e "/$AF ([^\/]+).* scope global/ && print \$1 and exit")
# get external ip from duch website
WANIP=$(curl -s http://whatismijnip.nl |cut -d " " -f 5)
SSID=$(iwgetid $INTERFACE -r)
QUALITY=$(grep $INTERFACE /proc/net/wireless | awk '{ print int($3 * 100 / 70) }')

#------------------------------------------------------------------------

# if the machine has no battery or wireless connection, the corresponding block should display error.
[[ ! -d /sys/class/net/${INTERFACE}/wireless ]] ||
    [[ "$(cat /sys/class/net/$INTERFACE/operstate)" = 'down' ]] && echo "<span foreground='#B4B7B4'></span><span foreground='#A3685A'> X</span>"

#------------------------------------------------------------------------

  if [[ $QUALITY -ge 80 ]]; then
      echo "<span foreground='#B4B7B4'></span><span foreground='#87AFAF'> $SSID</span>"
  elif [[ $QUALITY -lt 80 ]]; then
      echo "<span foreground='#B4B7B4'></span><span foreground='#87AFAF'> $SSID</span>" 
  elif [[ $QUALITY -lt 60 ]]; then
      echo "<span foreground='#B4B7B4'></span><span foreground='#87AFAF'> $SSID</span>" #orange   
  elif [[ $QUALITY -lt 40 ]]; then
      echo "<span foreground='#B4B7B4'></span><span foreground='#87AFAF'> $SSID</span>" #red
fi

#-----------------------------------------------------------------------

# mouse buttons + yad gtk network info dialog 

case $BLOCK_BUTTON in
    2) xdotool key Super_L+XF86Reload ;; # switch profiles with netmenu (shortcuts defined in i3cnf)
   3) xdotool key Super_L+Shift+XF86Reload ;; # connect with wifi-menu
   # yad gtk network info dialog 
   1) yad --no-buttons --width=210 --height=220 --text-info --class "yadinfo" --margins=10 --filename=<(echo -n "
 $SSID
------------------------------------
device name = $(ip route | cut -d " " -f 3 | grep [a-z]) 
ip = $IPADDR
gateway = $(ip route | cut -d " " -f 3 | grep [.])
route = $(ip route | cut -d " " -f 1 | grep [0-9]) 
resolv = $(cat /etc/resolv.conf | cut -d " " -f 2 | grep [0-9])
wanip = $WANIP
")
esac

